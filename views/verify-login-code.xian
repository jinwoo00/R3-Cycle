{{> head }}

<body class="flex flex-col min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50">

  <!-- Header with Logo -->
  <header class="py-4 px-6">
    <div class="container mx-auto">
      <div class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
        </svg>
        <span class="text-xl font-bold text-gray-800">R3-Cycle</span>
      </div>
    </div>
  </header>

  <!-- Main Content - Centered Card -->
  <main class="flex-grow flex items-center justify-center px-4 py-8">
    <div class="relative w-full max-w-md">

      <!-- Verification Card -->
      <div class="bg-white rounded-2xl shadow-2xl overflow-hidden">

        <!-- Card Header with Icon -->
        <div class="bg-gradient-to-r from-green-600 to-green-700 px-8 py-6 text-center">
          <div class="flex justify-center mb-4">
            <div class="bg-white rounded-full p-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
              </svg>
            </div>
          </div>
          <h1 class="text-3xl font-bold text-white">Verify Your Login</h1>
          <p class="text-green-100 mt-2">Enter the code sent to your email</p>
        </div>

        <!-- Card Body -->
        <div class="px-8 py-8">

          <!-- Email Display -->
          <div class="text-center mb-6">
            <p class="text-sm text-gray-600">
              We've sent a 6-digit verification code to:
            </p>
            <p class="text-base font-semibold text-green-600 mt-1">{{userEmail}}</p>
            <p class="text-xs text-gray-500 mt-2">
              Code expires in 10 minutes
            </p>
          </div>

          <!-- Flash Messages -->
          {{#if success_msg}}
          <div class="mb-4 p-4 bg-green-50 border border-green-200 text-green-700 rounded-lg text-center flex items-center justify-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>{{ success_msg }}</span>
          </div>
          {{/if}}

          {{#if error_msg}}
          <div class="mb-4 p-4 bg-red-50 border border-red-200 text-red-700 rounded-lg text-center flex items-center justify-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>{{ error_msg }}</span>
          </div>
          {{/if}}

          <!-- Dynamic Message Display -->
          <div id="message-display" class="mb-4 hidden"></div>

          <!-- Code Entry Form -->
          <form id="code-form" method="POST" action="/verify-login-code">
            <div class="mb-6">
              <label for="code" class="block text-sm font-medium text-gray-700 mb-2 text-center">
                Enter Verification Code
              </label>

              <!-- Code Input (styled as 6 separate boxes visually, but single input) -->
              <input
                type="text"
                name="code"
                id="code"
                maxlength="6"
                pattern="[0-9]{6}"
                required
                autocomplete="off"
                placeholder="000000"
                class="block w-full px-4 py-4 text-center text-3xl font-bold tracking-widest border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
              />
              <p class="mt-2 text-xs text-gray-500 text-center">Enter the 6-digit code from your email</p>
            </div>

            <!-- Submit Button -->
            <button
              type="submit"
              class="w-full py-3 px-6 text-base font-semibold text-white bg-green-600 rounded-lg hover:bg-green-700 transition-colors shadow-lg hover:shadow-xl flex items-center justify-center gap-2"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span>Verify & Continue</span>
            </button>
          </form>

          <!-- Resend Code Section -->
          <div class="mt-6 text-center border-t border-gray-200 pt-6">
            <p class="text-sm text-gray-600 mb-3">Didn't receive the code?</p>
            <button
              id="resend-btn"
              class="py-2 px-6 text-sm font-semibold text-green-600 bg-green-50 border-2 border-green-200 rounded-lg hover:bg-green-100 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2 mx-auto"
            >
              <svg id="resend-icon" xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              <span id="resend-text">Resend Code</span>
              <svg id="resend-spinner" class="hidden animate-spin h-4 w-4 text-green-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </button>
          </div>

          <!-- Back to Login Link -->
          <div class="mt-6 text-center">
            <a href="/login" class="text-sm text-gray-600 hover:text-gray-800 hover:underline flex items-center justify-center gap-1">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              <span>Back to Login</span>
            </a>
          </div>

        </div>
      </div>

    </div>
  </main>

  <!-- Footer -->
  {{> myFooter }}

  <!-- JavaScript for Resend Button -->
  <script>
    const resendBtn = document.getElementById('resend-btn');
    const resendText = document.getElementById('resend-text');
    const resendIcon = document.getElementById('resend-icon');
    const resendSpinner = document.getElementById('resend-spinner');
    const messageDisplay = document.getElementById('message-display');
    const codeInput = document.getElementById('code');

    // Auto-focus on code input
    codeInput.focus();

    // Only allow numbers in code input
    codeInput.addEventListener('input', (e) => {
      e.target.value = e.target.value.replace(/[^0-9]/g, '');
    });

    // Show message function
    function showMessage(message, type = 'success') {
      const bgColor = type === 'success' ? 'bg-green-50 border-green-200 text-green-700' : 'bg-red-50 border-red-200 text-red-700';
      const icon = type === 'success'
        ? '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>'
        : '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>';

      messageDisplay.innerHTML = `
        <div class="p-4 ${bgColor} border rounded-lg flex items-center justify-center gap-2">
          ${icon}
          <span>${message}</span>
        </div>
      `;
      messageDisplay.classList.remove('hidden');

      // Auto-hide after 5 seconds
      setTimeout(() => {
        messageDisplay.classList.add('hidden');
      }, 5000);
    }

    // Resend code
    resendBtn.addEventListener('click', async () => {
      // Show loading state
      resendBtn.disabled = true;
      resendText.textContent = 'Sending...';
      resendIcon.classList.add('hidden');
      resendSpinner.classList.remove('hidden');

      try {
        const response = await fetch('/resend-login-code', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const data = await response.json();

        if (data.success) {
          showMessage(data.message, 'success');
          // Clear the code input
          codeInput.value = '';
          codeInput.focus();
        } else {
          showMessage(data.message, 'error');
        }
      } catch (error) {
        showMessage('Failed to resend code. Please try again.', 'error');
      } finally {
        // Re-enable button after 2 seconds
        setTimeout(() => {
          resendBtn.disabled = false;
          resendText.textContent = 'Resend Code';
          resendIcon.classList.remove('hidden');
          resendSpinner.classList.add('hidden');
        }, 2000);
      }
    });
  </script>

</body>
</html>
